# =============================================================================
# Configuration file of VULCAN: GJ 581c - Earth like
# =============================================================================

# ====== Setting up the elements included in the network ======
atom_list = ['H', 'O', 'C', 'N','He','S']
# ====== Setting up paths and filenames for the input and output files  ======
# input:
network = 'thermo/SNCHO_photo_network_2024.txt'
use_lowT_limit_rates = False
gibbs_text = 'thermo/gibbs_text.txt' # (all the nasa9 files must be placed in the folder: thermo/NASA9/)
cross_folder = 'thermo/photo_cross/'
com_file = 'thermo/all_compose.txt'
#atm_file = 'atm/WASP-39b_first.txt'
atm_file = 'atm/TP_alfa_cent_min.txt'
flare_times_file = 'atm/stellar_flux/GJ876/flare_times.txt' #The file containing the times when the different flare spectra start
sflux_file = 'atm/stellar_flux/alfa_centauri_min.txt' # This is the flux density at the stellar surface
scale = True
sflux_dir = 'atm/stellar_flux/flare_GJ674_final' #The folder containing the time dependent SEDs
sflux_quies = 'atm/stellar_flux/Gueymard_solar.txt'  #The quiescent spectrum to be used if flare is turned on
lc_file = 'fiducial_flare/lightcurves/lc_series_inactive_1e6s_10b_13.txt' #light curves when using flares
top_BC_flux_file = 'atm/top_vel_test.txt'
bot_BC_flux_file = 'atm/BC_bot.txt'
vul_ini = 'output/SProject/test_planet_E_Run13B.vul'
# output:
output_dir = 'output/alfa_cent_min/'
plot_dir = 'plot/movie/output/HATP13b/'
movie_dir = 'plot/movie/output/HATP13b/'
out_name =  'HATP13b_1.5xsolar.vul'

# New params for flare:
use_flare = False
flare_type = 'model' #options: file (flares are in file) or model (lightcurves from Loyd et al. 2018)
lightcurve_type = 'file' #option: file (lightcurve found in lc_file) or random (lightcurve is created randomly)
t_start = 0 #starting point in time of lightcurve file. Only when lc_type = file and make sure integration time can be included
integr_time = 1e6
thflare = 1e-7
set_Threshold = None #'VAL' #Options: None (no threshold); mean (mean peaks th); median (median peaks th); VAL (given value - set_Threshold_val)
set_Threshold_val = 25
flare_duration = 2700 # sec
continuous_flares = False
number_flares = 2 # Number of flares
flare_frequency = 0.28 # = flare/day From FFD
to_equib = False # Let the simulation go to equilibrium after flare(s)
linbin = True

# ====== Setting up the elemental abundance ======
use_solar = True # True: using the solar abundance from Table 10. K.Lodders 2009; False: using the customized elemental abundance.
# customized elemental abundance (only reads when use_solar = False)
O_H = (6.061777620466959e-4)*1.5#*(1.8317238126069761) #To make it subsolar
C_H = (2.7758756035343454e-4)*1.5#/(1.8317238126069761)
N_H = (8.184647881347903e-05)*1.5
S_H = (1.3182567385564074e-05)*1.5
He_H = 0.0969
ini_mix = 'EQ' # Options: 'EQ', 'const_mix', 'vulcan_ini' (for 'vulcan_ini, the T-P grids have to be exactly the same)
fastchem_met_scale = 1.5 # scaling factor for other elements in fastchem (e.g., if fastchem_met_scale = 0.1, other elements such as Si and Mg will take 0.1 solar values)

#fc_logK = 'nasa9_logK_SNCHOTi_ion.dat'

# Initialsing uniform (constant with pressure) mixing ratios (only reads when ini_mix = const_mix)
const_mix = {'CH4':2.7761E-4*2, 'O2':4.807e-4, 'He':0.09691, 'N2':8.1853E-5, 'H2':1. -2.7761E-4*2*4/2}

# ====== Setting up photochemistry ======
use_photo = True
# astronomy input
r_star = 1.25 #6.484e10 # stellar radius in solar radius
Rp = 6.9911e9#9.159e9 # Planetary radius (cm) (for computing gravity)
Mp = 1.898e30#1.678e30 # Planetary mass (grams)
orbit_radius = 0.33 # planet-star distance in A.U.
d = 4.3949# Distance to system in light-years
Teff = 5801 # K
sl_angle = 48 /180.*3.14159 # the zenith angle of the star in degree
f_diurnal = 1 # to account for the diurnal average of solar flux (i.e. 0.5 for Earth; 1 for tidally-locked planets)
# radiation parameters
scat_sp = ['H2']#, 'He'] # the bulk compositions that contribute to Rayleigh scattering
T_cross_sp = []
edd = 0.669 # the Eddington coefficient

dbin1 = 0.05  # the uniform bin width
dbin2 = 1
dbin_12trans = 400. # the wavelength switching from dbin1 to dbin2

# frequency to update the flux and optical depth
ini_update_photo_frq = 20
final_update_photo_frq = 2
ini_update_photo_frq_flare = 5

# ====== Setting up ionchemistry ======
use_ion = False
if use_photo == False and use_ion == True:
    print ('Warning: use_ion = True but use_photo = False')
# photoionization needs to run together with photochemistry


# ====== Setting up parameters for the atmosphere ======
atm_base = 'H2' #Options: 'H2', 'N2', 'O2', 'CO2 -- the bulk gas of the atmosphere: affects molecular diffsion
# should also affect the thermal diffusion factor alpha_T???
rocky = False # for surface gravity

nz = 120   # number of vertical layers
P_b = 1.E8 # pressure at the bottom (dyne/cm^2)
P_t = 1.e-2 #1.e-2 # pressure at the top (dyne/cm^2)
use_Kzz = True
use_moldiff = True
use_vz = False
atm_type = 'file' # Options: 'isothermal', 'analytical', or 'file'
Kzz_prof = 'const' # Options: 'const' or 'file'
vz_prof = 'const' # Options: 'const' or 'file'
gs = 2479    # gravity (cm/s^2)  (HD189:2140  HD209:936  GJ674:980)
Tiso = 300. # only reads when atm_type = 'isothermal'
# setting the parameters for the analytical T-P from (126)in Heng et al. 2014. Only reads when atm_type = 'analytical'
# T_int, T_irr, ka_L, ka_S, beta_S, beta_L
para_warm = [300., 1740., 0.1, 0.02, 1., 1.]
para_cool = [90.,  1000., 0.04, 0.01, 1., 1.]
para_GJ674 = [450,527,0.0001,0.001,1.,1.]
para_anaTP = para_warm
const_Kzz = 1.E10 # (cm^2/s) Only reads when use_Kzz = True and Kzz_prof = 'const'
const_vz = 0 # (cm/s) Only reads when use_vz = True and vz_prof = 'const'

# frequency for updating dz and dzi due to change of mu
update_frq = 20

# ====== Setting up the boundary conditions ======
# Boundary Conditions:
use_topflux = False
use_botflux = False
# TEST
tflux_from_file = False
diff_esc = ['H','H2'] # species for diffusion-limit escape at TOA
#use_fix_all_bot = True
use_fix_sp_bot = {}
max_flux = 1e15

# ====== Reactions to be switched off  ======
remove_list = [] # in pairs e.g. [1,2]
#remove_list = range(251,612)

# == Condensation (Ongoing testing!)  ======
use_condense = False
use_relax_water = False
use_settling = False
start_conden_time = 0
condense_sp = ["H2O"]    # , 'NH3'
non_gas_sp = []#["H2O_l_s"]#, 'e']
humidity = 0.25
fix_species = ['H2O']#,'H2O_l_s']
fix_species_time = 6e8


# ====== steady state check ======
st_factor = 0.7
conv_step = 500

# ====== Setting up numerical parameters for the ODE solver ======
ode_solver = 'Ros2' # case sensitive
use_print_prog = True
use_print_delta = False
print_prog_num = 500  # every x steps to print progress
dttry = 1.E-10
trun_min = 1e2
runtime = 1.E13
dt_min = 1.E-14
dt_max = runtime*1e-4
dt_var_max = 2.
dt_var_min = 0.5
count_min = 120
count_max = int(1.5E4)
atol = 1.E-1#1.E-2 # Try decreasing this if the solutions are not stable
mtol = 1.E-21
mtol_conv = 1.E-20
pos_cut = 0
nega_cut = -1.
loss_eps = 1e-1
yconv_cri = 0.01 # for checking steady-state
slope_cri = 1.e-4
yconv_min = 0.1
flux_cri = 0.1
flux_atol = 1. # the tol for actinc flux (# photons cm-2 s-1 nm-1)
# ====== Setting up numerical parameters for Ros2 ODE solver ======
rtol = 0.05
rtol_flare = 0.01
# ====== Setting up numerical parameters for SemiEu/SparSemiEU ODE solver (Not used) ======
PItol = 0.1

# ====== Setting up for ouwtput and plotting ======
# plotting:
plot_TP = True
Kzz_plot = False
use_live_plot = True
use_live_flux = False
use_plot_end = False
use_plot_evo = False
use_save_movie = False
use_flux_movie = False
plot_height = False
use_PIL = True
live_plot_frq = 10
save_movie_rate = live_plot_frq
y_time_freq = 1  #  storing data for every 'y_time_freq' step
#plot_spec = ['H2','H','N','N2','NH3','NO','NO2','HNO']
plot_spec = ['H2','H','CO2','SO2','CH4','H2O','H2S']
#['H2', 'H', 'CH4', 'H2O', 'CO2','OH', 'NH3','H2O','C2H2','H2CN']
# output:
output_humanread = False
use_shark = False
save_evolution = True
save_evo_frq = 150
